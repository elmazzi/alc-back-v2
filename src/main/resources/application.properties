spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=noreply.engflexy@gmail.com
spring.mail.password=gvzvjtwfpzzibwog
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:mysql://localhost/learn?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.main.allow-bean-definition-overriding=true
spring.application.name=generated
spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.password=WNaJyDJRFcmt
spring.datasource.password=anaZouani@1987
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.main.allow-circular-references= true

#Hibernate automatic schema generation in conjugation with script-based schema creation and data population
spring.jpa.defer-datasource-initialization=true
spring.sql.init.data-locations=classpath:database/data.sql
#to load the data to database
spring.sql.init.mode=always

server.port=8036
bezkoder.app.jwtSecret=ManeoSecretKey
bezkoder.app.jwtExpirationMs=86400000

confirmation.mail.template.path=classpath:Templates/confirmationMail.ftl
google.secret.key.path=classpath:keys/client_secret.json
google.oauth.callback.uri=http://localhost:4200/admin/driveApi
google.credentials.folder.path=file:C://KamImages

gmail-google.secret.key.path=classpath:keys/gmail_client_secret.json
gmail-google.oauth.callback.uri=http://localhost:4200/admin/profile
gmail-google.credentials.folder.path=file:C://gmailSecret

#gmail-google.secret.key.path=classpath:keys/gmail_client_secret.json
#gmail-google.oauth.callback.uri=https://engflexy.com/admin/profile
#gmail-google.credentials.folder.path=file:secret


#google.oauth.callback.uri=http://engflexy.com
#google.credentials.folder.path="/home/ubuntu/C:\KamImages/"

# The format used for the keystore. It could be set to JKS in case it is a JKS file
#server.ssl.key-store-type=PKCS12
## The path to the keystore containing the certificate
#server.ssl.key-store=classpath:keystore/engflexy.p12
## The password used to generate the certificate
#server.ssl.key-store-password=12345678
## The alias mapped to the certificate
##server.ssl.key-alias=certificate.pfx
#server.ssl.keyAlias= engflexy
#server.ssl.enabled=true
##trust store location
#trust.store=classpath:keystore/engflexy.p12
##trust store password
#trust.store.password=12345678
